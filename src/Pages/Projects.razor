@page "/projects"
@inject HttpClient Http


<PageTitle>Projects</PageTitle>

<!-- Project Section -->
<div class="w3-container w3-padding-32" id="projects">
    <h3 class="w3-border-bottom w3-border-light-grey w3-padding-16">Projects</h3>
</div>


@if (_projects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var batch in _projects)
    {
        <div class="w3-row-padding">
            @foreach (var project in batch)
            {
                <div class="w3-col l3 m6 w3-margin-bottom">
                    <div class="w3-display-container">
                        <div class="w3-display-topleft w3-black w3-padding">@project.Name</div>
                        <img src="@project.Thumb" alt="@project.Name" style="width:100%">
                    </div>
                </div>
            }
        </div>
    }
}

@code {
    private Project[][]? _projects;

    protected override async Task OnInitializedAsync()
    {
        var allProjects = await Http.GetFromJsonAsync<Project[]>("data/projects.json") ?? Array.Empty<Project>();
        _projects = allProjects
            .Select((s, i) => new { Value = s, Index = i })
            .GroupBy(x => x.Index / 4)
            .Select(grp => grp.Select(x => x.Value).ToArray())
            .ToArray();
    }

    public class Project
    {
        public string Name { get; set; }
        public string Thumb { get; set; }
    }
}
